{"name":"Itbuildscharacter","tagline":"Android Python App with web management to Manage Pathfinder Characters","body":"ItBuildsCharacter\r\n=================\r\nYet another app for the [Pathfinder Roleplaying Game](http://paizo.com/pathfinderRPG)\r\nto manage characters and combat.\r\nhttp://jsexauer.github.io/ItBuildsCharacter\r\nOverview\r\n--------\r\n\r\nSome features that make ItBuildsCharacter unique over others:\r\n  - **Andorid App**: Android app built using [kivy](http://www.kivy.org) framework.\r\n    See pictures [below](#app_ss).\r\n  - **Python Model**: An extensive model has been created to allow the definition of characters\r\n  as python objects.  An example is [presented below](#char_def) and is\r\n  the character used in the following examples.\r\n  - **Auditing**: Full auditing of all statistics to show how they were derived:\r\n```\r\n>>> with c.audit_context:\r\n...     print c.HP\r\nhit_die + (level-1)*hp_per_level + con*level + favored_class + feats:\r\n  con: +1\r\n  level: +5\r\n  favored_class: +5\r\n  hit_die: +10\r\n  feats:\r\n    Toughness (HP: +5)\r\n  hp_per_level: +6\r\n= +49\r\n>>> with c.audit_context:\r\n...     print c.attacks[0]\r\nAttack of...:\r\n  attack: <Attack Bonus at iterative + weapon:\r\n            weapon: +2\r\n            AB: <Sum of:\r\n                  BAB: +5\r\n                  str: +4\r\n                = +9>\r\n          = +11>\r\n  damage: <Sum of:\r\n            str: +4\r\n            weapon: 2d6+2\r\n            two_handed_str_bonus: +2\r\n          = 2d6+8>\r\n= +11 for 2d6+8 damage\r\n```\r\n  - **Buffs**:  Toggle on buffs and conditions like flanking, rage, Bless,\r\n  Inspire Courage, etc...  Statistics and attacks automatically update.  For\r\n  example, let's say our [example Cavalier](#char_def) is blessed and\r\n  challenges his target:\r\n```\r\n>>> challenge = Buff('Challenge', dmg_mod=5)\r\n>>> challenge.AC = 1\r\n>>> c.buffs.append(challenge)\r\n>>> c.buffs.append(Buff('Bless', atk_mod=1))\r\n>>> with c.audit_context:\r\n...     print c.attacks[0]\r\nAttack of...:\r\n  attack: <Attack Bonus at iterative + weapon:\r\n            weapon: +2\r\n            AB: <Sum of:\r\n                  BAB: +5\r\n                  str: +4\r\n                  buffs:\r\n                    Bless (+1)\r\n                = +10>\r\n          = +12>\r\n  damage: <Sum of:\r\n            str: +4\r\n            buffs:\r\n              Challenge (+5)\r\n            weapon: 2d6+2\r\n            two_handed_str_bonus: +2\r\n          = 2d6+13>\r\n= +12 for 2d6+13 damage\r\n```\r\n  - **Counters**:  Track things like HP, gold, XP, ki pool, etc.  These are\r\n  automatically saved to the sever, which brings us to...\r\n  - **Website Integration**:  The character definition and counter statuses are\r\n  automatically synced between the phone app and the website.  Ultimately, I\r\n  hope to build off of the web-ui of [MythWeavers](http://www.myth-weavers.com/sheetindex.php),\r\n  which is based on the open-source project [3EProfiler](http://sourceforge.net/projects/rpgwebprofiler/).\r\n\r\n\r\n<a name=\"app_ss\"/>\r\nAndroid App Screenshots\r\n-----------------------\r\n### Statistics Screen ###\r\n![Stats Screen](https://jsexauer.github.io/img/stats.png)\r\n### Attacks/Buffs Screen ###\r\n![Attacks/Buffs Screen](https://jsexauer.github.io/img/buffs.png)\r\n### Counters ###\r\n![Counters Screen](https://jsexauer.github.io/img/counters.png)\r\n### Audits ###\r\nA long-press on any dark-colored number will show its audit results\r\n\r\n![Audit Screen](https://jsexauer.github.io/img/audit.png)\r\n\r\n<a name=\"char_def\"/>\r\nExample Character Definition\r\n----------------------------\r\nThe code below will create a level 5 human Cavalier named Henri.\r\n```python\r\nfrom model import (Character, RPGClass, Equipment, Weapon, Attack,\r\n                   Buff, Feat, auditable)\r\n\r\nclass Cavalier(RPGClass):\r\n    def __init__(self):\r\n        super(Cavalier, self).__init__()\r\n        self.hit_die = 10\r\n        self.fort = 4       # TODO: Scale will level\r\n        self.ref = 1\r\n        self.will = 1\r\n\r\nc = Character()\r\nc.name = 'Henri'\r\nc.lvl = 5\r\nc.BAB = 5\r\nc.rpg_class = Cavalier()\r\n\r\n# Ability Scores\r\nc.base.str_score = 19\r\nc.base.dex_score = 12\r\nc.base.con_score = 13\r\nc.base.cha_score = 14\r\n# All the others are the default value of 10\r\n```\r\nLet's now give him a Masterwork Breastplate +2 and a Cloak of Resistance +1.\r\n```python\r\n# Armor\r\nbreastplate = Equipment(\"Masterwork Breastplate +2\")\r\nbreastplate.AC = 8\r\nbreastplate.ACP = -3\r\nc.equipment.append(breastplate)\r\n\r\ncr = Equipment(\"Cloak of Resistance +1\")\r\ncr.fort = 1\r\ncr.ref = 1\r\ncr.will = 1\r\nc.equipment.append(cr)\r\n```\r\nTo defend himself against the evils of Golarion, he needs a +2 Feybane\r\nGreatsword and a Composite long bow (in case he has to fight at range).\r\n```python\r\n# Weapons\r\nfeybane_greatsword = Weapon(\"+2 Feybane Greatsword\",\r\n                        Attack(2, \"2d6+2\", [19,20], two_handed=True))\r\nc.equipment.main_hand = feybane_greatsword\r\n\r\ncmpst_lng_bow = Weapon(\"+2 Cmpst Lng Bow\", Attack(2, \"1d8\", ranged=True))\r\nc.equipment.append(cmpst_lng_bow)\r\n```\r\nFinally, Henri took Toughness, which will scale as he levels.  Notice that we\r\ncan define a custom formula which show up during when we audit how his\r\nhit points were calculated.\r\n```python\r\n# Feats\r\nclass Toughness(Feat):\r\n    def on_apply(self, character):\r\n        self.character = character\r\n    @auditable\r\n    def HP(self):\r\n        _formula = \"3 + max(lvl-3, 0)\"\r\n        lvl = self.character.lvl\r\n        return 3 + max(lvl-3,0)\r\ntoughness = Toughness(\"Toughness\")\r\nc.feats.append(toughness)\r\n```","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}